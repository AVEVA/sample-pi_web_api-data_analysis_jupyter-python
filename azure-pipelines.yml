trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: OpsGuildAutomationRepo
      type: git
      name: Engineering/OpsGuild.Automation
      ref: refs/heads/main
    - repository: templates
      type: github
      name: osisoft/OSI-Samples
      endpoint: osisoft/OSI-Samples

variables:
  - template: '/miscellaneous/build_templates/variables.yml@templates'
  - name: analysisProject
    value: PIWebAPI_Data_Analysis

jobs:
  - job: BuildUploadUtility
    pool:
      name: 00-OSIManaged-Containers
      demands: Agent.OS -equals Windows_NT
    variables:
      - name: Resource
        value: $(PIWebAPI)
      - name: VerifySSL
        value: false
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'PIWebAPI, DataArchiveName, AFServerName, AFDatabaseName, Username, Password'

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          projects: '**/UploadUtility.csproj'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: 'build'
          projects: '**/UploadUtility.csproj'

      - task: CopyFiles@2
        displayName: Copy Build Output Files
        inputs:
          sourceFolder: '$(Build.SourcesDirectory)'
          targetFolder: '$(Build.BinariesDirectory)'
          contents: '**/bin/Debug/net*/*'
          overWrite: true
          flattenFolders: true

      - task: PublishBuildArtifacts@1
        displayName: Publish Build Output Files
        inputs:
          PathtoPublish: '$(Build.BinariesDirectory)'
          ArtifactName: 'UploadUtility'
          publishLocation: 'Container'

      - task: PowerShell@2
        displayName: Run UploadUtility
        inputs:
          targetType: 'inline'
          script: '&"$(Build.BinariesDirectory)/UploadUtility.exe" "$(Build.SourcesDirectory)/UploadUtility/Building Example.xml" "$(Build.SourcesDirectory)/UploadUtility/tagdefinition.csv" "$(Build.SourcesDirectory)/UploadUtility/pidata.csv" "$(Build.SourcesDirectory)/appsettings.json"'

  - job: Tests
    pool:
      name: 00-OSIManaged-Containers
      demands: Agent.OS -equals Windows_NT
    dependsOn: BuildUploadUtility
    variables:
      - name: Resource
        value: $(PIWebAPI)
      - name: VerifySSL
        value: false
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'PIWebAPI, DataArchiveName, AFServerName, AFDatabaseName, Username, Password'

      - script: |
          echo Install pip
          call python -m pip install --upgrade pip
          echo Install tools
          call pip install requests
          call pip install requests_kerberos
          call pip install unittest
          call pip install unittest-xml-reporting
          call pip install pytest
          echo Install requirements
          call pip install -r requirements.txt
          echo Run tests
          call jupyter nbconvert --to script Notebook.ipynb
          python -m pytest --junitxml=junit/test-results.xml ./Notebook.py
          echo Complete
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-*.xml'
          searchFolder: '$(Build.SourcesDirectory)'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()

  - template: '/miscellaneous/build_templates/code-analysis.yml@templates'
    parameters:
      buildSteps:
        - script: |
            pip install nbconvert
            jupyter nbconvert --to script Notebook.ipynb
      skipPolaris: true
      useRequirementsTxt: true
